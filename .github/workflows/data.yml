name: Data Pipeline, fetch, process, test, split

on:
  #  schedule:
  #    - cron: '0 0 * * *'
  push:
    branches:
      - develop

jobs:
  fetch-air-quality-data:
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install
      - name: Run script
        run: |
          poetry run python src/data/fetch_air_quality_data.py
      - name: Cache .venv directory
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

  fetch-weather-data:
    needs: fetch-air-quality-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/fetch_weather_data.py



  process-data:
    needs: fetch-weather-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/process_data.py


  validate-data:
    needs: process-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/validate_data.py


  test-data:
    needs: process-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/test_data.py


  ks-test-data:
    needs: process-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/ks_test_data.py


  train-test-split-data:
    needs:
      - validate-data
      - test-data
      - ks-test-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/train_test_split_data.py