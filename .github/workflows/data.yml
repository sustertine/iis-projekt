name: Data Pipeline, fetch, process, test, split

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - develop

jobs:
  fetch-air-quality-data:
    runs-on: ubuntu-20.04
    env:
      AIR_QUALITY_URL: ${{ secrets.AIR_QUALITY_URL }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install
      - name: Cache .venv directory
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV
      - name: Configure DVC
        run: |
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Dvc pull
        run: |
          poetry run dvc pull -r origin
      - name: Run script
        run: |
          poetry run python src/data/fetch_air_quality_data.py
      - name: Commit changes to DVC
        run: |
          poetry run dvc add data/raw/air-quality/
          poetry run dvc push -r origin
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Commit changes before pull"
          git pull
          git diff-index --quiet HEAD || (git commit -a -m "Update data - air quality" --allow-empty)
          git push
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  fetch-weather-data:
    needs: fetch-air-quality-data
    runs-on: ubuntu-20.04
    env:
      WEATHER_URL: ${{ secrets.WEATHER_URL }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Cache .venv directory
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Configure DVC
        run: |
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Dvc pull
        run: |
          poetry run dvc pull -r origin
      - name: Run script
        run: |
          poetry run python src/data/fetch_weather_data.py
      - name: Commit changes to DVC
        run: |
          poetry run dvc add data/raw/weather/
          poetry run dvc push -r origin
      - name: Commit changes to DVC
        run: |
          poetry run dvc add data/raw/weather/
          poetry run dvc push -r origin
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Commit changes before pull"
          git pull
          git diff-index --quiet HEAD || (git commit -a -m "Update data - weather" --allow-empty)
          git push
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




  process-data:
    needs: fetch-weather-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/process_data.py



  validate-data:
    needs: process-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/validate_data.py



  test-data:
    needs: process-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/test_data.py



  ks-test-data:
    needs: process-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/ks_test_data.py



  train-test-split-data:
    needs:
      - validate-data
      - test-data
      - ks-test-data
    runs-on: ubuntu-20.04
    #    env:
    #      AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }} # TODO: Add secret
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: uncache venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run script
        run: |
          poetry run python src/data/train_test_split_data.py