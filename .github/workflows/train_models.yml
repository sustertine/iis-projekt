name: Train models pipeline

on:
  workflow_run:
    workflows: [ "Data pipeline" ]
    types:
      - completed
  workflow_dispatch:

jobs:
  train-evaluate-models:
    runs-on: ubuntu-20.04
    env:
      AIR_QUALITY_URL: ${{ secrets.AIR_QUALITY_URL }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install
      - name: Cache .venv directory
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV
      - name: Configure DVC
        run: |
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Git pull
        run: |
          git fetch origin
          git pull
      - name: Dvc pull
        run: |
          poetry run dvc pull -r origin
      - name: Run script
        run: |
          poetry run python src/models/train_eval_models.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MLFLOW_REPO_OWNER: ${{ secrets.MLFLOW_REPO_OWNER }}
          MLFLOW_REPO_NAME: ${{ secrets.MLFLOW_REPO_NAME }}
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      - name: Commit changes to DVC
        run: |
          poetry run dvc add data/raw/air-quality/
          poetry run dvc push -r origin
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff-index --quiet HEAD || (git commit -a -m "Update data - air quality" --allow-empty)
          git push
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}